name: self-check

on: [push, pull_request]

jobs:
    pre-commit:
        runs-on: ubuntu-latest
        steps:
            - name: Set up Git repository
              uses: actions/checkout@v2
            - name: Set up Python environment
              uses: actions/setup-python@v2
            - name: Run pre-commit checks
              uses: pre-commit/action@v2.0.2
    verify-textidote:
        runs-on: ubuntu-latest
        steps:
            - name: Set up Git repository
              uses: actions/checkout@v2
            - name: Lint fine.tex
              id: fine
              uses: ./
              with:
                  root_file: fine.tex
                  working_directory: test/
                  threshold_error: 0
            - name: Assert num_warnings == 0
              if: ${{ steps.fine.outputs.num_warnings != 0 }}
              run: 'echo "::error file=test/fine.tex::num_warnings: ${{ steps.fine.outputs.num_warnings }}"; exit 1;'
            - name: Lint bad.tex with no threshold set
              id: bad_no_threshold
              uses: ./
              with:
                  root_file: bad.tex
                  working_directory: test/
            - name: Assert num_warnings > 0
              if: ${{ steps.bad_no_threshold.outputs.num_warnings <= 0 }}
              run: 'echo "::error file=test/bad.tex::num_warnings: ${{ steps.bad_no_threshold.outputs.num_warnings }}"; exit 1;'
            - name: Lint bad.tex with threshold set to known warnings
              id: bad_known_threshold
              uses: ./
              with:
                  root_file: bad.tex
                  working_directory: test/
                  threshold_error: 21
            - name: Assert num_warnings <= 21
              if: ${{ steps.bad_known_threshold.outputs.num_warnings > 21 }}
              run: 'echo "::error file=test/bad.tex::num_warnings: ${{ steps.bad_known_threshold.outputs.num_warnings }}"; exit 1;'
            - name: Lint and spell-check fine.tex
              uses: ./
              id: fine_spell_check
              with:
                  root_file: fine.tex
                  working_directory: test/
                  args: --check en
                  threshold_error: 1 # by default the word 'linter' will be unknown
            - name: Assert num_warnings == 1
              if: ${{ steps.fine_spell_check.outputs.num_warnings != 1 }}
              run: 'echo "::error file=test/fine.tex::num_warnings: ${{ steps.fine_spell_check.outputs.num_warnings }}"; exit 1;'
            - name: Lint and spell-check fine.tex
              id: fine_spell_check_w_dict
              uses: ./
              with:
                  root_file: fine.tex
                  working_directory: test/
                  args: --check en --dict en.dict
                  threshold_error: 0
            - name: Assert num_warnings == 0
              if: ${{ steps.fine_spell_check_w_dict.outputs.num_warnings != 0 }}
              run: 'echo "::error file=test/fine.tex::num_warnings: ${{ steps.fine_spell_check_w_dict.outputs.num_warnings }}"; exit 1;'
